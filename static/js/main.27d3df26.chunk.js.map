{"version":3,"sources":["axios.js","UI/Spinner.js","Redux/Actions/loadingAction.js","Redux/Types/Types.js","Login/Components/LoginCart/LoginCardPicture/LoginPicture.js","Redux/Actions/FormValidationAction.js","UI/successAlert.js","UI/errorAlert.js","Login/Components/LoginCart/LoginForm/SignIn/SignIn.js","Redux/Actions/loginAction.js","Login/Components/LoginCart/LoginForm/SignUp/SignUp.js","Redux/Actions/registerAction.js","Login/Components/LoginCart/LoginForm/ForgetPassword/forgetPassword.js","Redux/Actions/ForgetPasswordAction.js","Login/Components/LoginCart/LoginForm/LoginForm.js","Login/Components/LoginCart/LoginCart.js","Login/Components/LoginContainer.js","Redux/Reducers/loginReducers.js","Redux/Reducers/loadingReducer.js","Redux/Reducers/registerReducer.js","Redux/Reducers/ForgetPasswordReducer.js","Redux/Reducers/FormValidationRedcer.js","Redux/Reducers/index.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","timeout","params","defaults","headers","Spinner","self","this","interceptors","request","use","config","props","loading","error","Promise","reject","response","console","log","toJSON","Backdrop","open","loader","loaded","style","zIndex","color","margin","CircularProgress","width","height","Component","connect","state","bool","dispatch","type","data","LoginPicture","className","validation","inputType","inputValue","input","value","undefined","emptyInput","successAlert","Fade","in","Alert","variant","severity","title","errorAlert","SignIn","email","password","onEmpty","Object","values","map","item","onChanges","e","InputName","target","name","setState","onSubmit","preventDefault","loginValues","validInputs","valid","fetchLogin","login","loggedIn","isEmpty","TextField","validError","helperText","textError","id","label","size","defaultValue","onChange","empty","Button","onClick","turnComponent","Login","user","post","then","localStorage","setItem","token","catch","SignUp","repeatPassword","RegisterValues","text","register","reg","registered","newUser","ForgetPassword","resetValues","resetPassword","reset","resetSuccess","LoginForm","component","onTurnComponents","LoginCart","LoginContainer","initialState","action","emailRegex","RegExp","inintialState","length","test","combineReducers","loadingReducer","FormValidationRedcer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.27d3df26.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"http://127.0.0.1:8000\",\r\n  timeout: 10000,\r\n  params: {}, // do not remove this, its added to add params later in the config\r\n});\r\naxios.defaults.headers = { \"Content-Type\": \"application/json\" }\r\nexport default instance;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { loading } from \"../Redux/Actions/loadingAction\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nclass Spinner extends Component {\r\n  componentWillMount() {\r\n    const self = this;\r\n    axios.interceptors.request.use(\r\n      function (config) {\r\n        // spinning start to show\r\n        self.props.loading(true);\r\n        return config;\r\n      },\r\n      function (error) {\r\n        self.props.loading(false);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      function (response) {\r\n        // spinning hide\r\n        self.props.loading(false);\r\n        return response;\r\n      },\r\n      function (error) {\r\n        self.props.loading(false);\r\n        console.log(error.toJSON());\r\n        \r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Backdrop\r\n          open={this.props.loader.loaded}\r\n          style={{ zIndex: 100, color: \"#fff\", margin: 0 }}\r\n        >\r\n          <CircularProgress\r\n            style={{ width: 60, height: \"unset\" }}\r\n            color=\"inherit\"\r\n          />\r\n        </Backdrop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loader: state,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loading })(Spinner);\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"../Types/Types\";\r\nexport const loading = (bool) => (dispatch) => {\r\n  if (bool) {\r\n    dispatch({\r\n      type: SHOW_LOADER,\r\n      data: bool,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: HIDE_LOADER,\r\n      data: bool,\r\n    });\r\n  }\r\n};\r\n","//Auth\r\n\r\n//Register\r\nexport const REGISTER_SUCESSFULL = 'REGISTER_SUCESSFULL'\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE'\r\n\r\n\r\n//Login\r\nexport const LOGGIN_SUCCESSFULL = 'LOGGIN_SUCCESSFULL'\r\nexport const LOGGIN_FAILURE = 'LOGGIN_FAILURE'\r\n\r\n// Loader\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const HIDE_LOADER = 'HIDE_LOADER'\r\n\r\n// Forget Password\r\nexport const Forget_Password_FETCH_SUCESSFULL = 'Forget_Password_FETCH_SUCESSFULL'\r\nexport const Forget_Password_FETCH_FAILURE = 'Forget_Password_FETCH_FAILURE'\r\n\r\n// Validation\r\nexport const EMPTY_INPUT = 'EMPTY_INPUT'\r\nexport const TEXT_VALIDATION = 'TEXT_VALIDATION'\r\nexport const EMAIL_VALIDATION = 'EMAIL_VALIDATION'\r\nexport const PASSWORD_VALIDATION = 'PASSWORD_VALIDATION'\r\n","import React from 'react';\r\nimport './LoginPicture.css'\r\nconst LoginPicture = () => {\r\n    return (\r\n        <div className=\"card_picture\">\r\n        <div className=\"card_picture__title\">\r\n          <h1>\r\n            Atma <span>Shop</span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginPicture;\r\n","import {\r\n  TEXT_VALIDATION,\r\n  EMAIL_VALIDATION,\r\n  PASSWORD_VALIDATION,\r\n  EMPTY_INPUT,\r\n} from \"../Types/Types\";\r\n\r\nexport const validation = (inputType, inputValue) => (dispatch) => {\r\n  if (inputType === \"text\") {\r\n    dispatch({\r\n      type: TEXT_VALIDATION,\r\n      input: inputType,\r\n      value: inputValue,\r\n    });\r\n  } else if (inputType === \"email\") {\r\n    dispatch({\r\n      type: EMAIL_VALIDATION,\r\n      input: inputType,\r\n      value: inputValue,\r\n    });\r\n  } else if (inputType === \"password\") {\r\n    dispatch({\r\n      type: PASSWORD_VALIDATION,\r\n      input: inputType,\r\n      value: inputValue,\r\n    });\r\n  }\r\n  if (inputValue !== undefined) {\r\n    dispatch({\r\n      type: EMPTY_INPUT,\r\n      value: inputValue,\r\n    });\r\n  }\r\n};\r\n\r\nexport const emptyInput = (inputValue) => (dispatch) => {\r\n  console.log(inputValue);\r\n  \r\n  if (inputValue !== undefined) {\r\n    dispatch({\r\n      type: EMPTY_INPUT,\r\n      value: inputValue,\r\n    });\r\n  }\r\n}","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst successAlert = (props) => {\r\n  return (\r\n    <Fade in timeout={500}>\r\n      <Alert variant=\"filled\" severity=\"success\">\r\n        {props.title}\r\n      </Alert>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default successAlert;\r\n","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst errorAlert = (props) => {\r\n  return (\r\n    <Fade in timeout={500}>\r\n      <Alert variant=\"filled\" severity=\"error\">\r\n        {props.title}\r\n      </Alert>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default errorAlert;\r\n","import React, { Component } from \"react\";\r\nimport \"./SignIn.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { fetchLogin } from \"../../../../../Redux/Actions/loginAction\";\r\nimport {\r\n  validation,\r\n  emptyInput,\r\n} from \"../../../../../Redux/Actions/FormValidationAction\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: null,\r\n    password: null,\r\n  };\r\n\r\n  onEmpty = () => {\r\n    Object.values(this.state).map((item) => {\r\n    return this.props.emptyInput(item);\r\n    });\r\n  };\r\n  onChanges = (e) => {\r\n    const InputName = e.target.name;\r\n    this.setState({ [e.target.name]: e.target.value});\r\n    this.props.validation(InputName, e.target.value);\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const loginValues = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    if (this.state.email === null && this.state.password === null) {\r\n      this.onEmpty();\r\n    }\r\n    const { email, password } = this.props.validInputs;\r\n    if (email.valid === true && password.valid === true) {\r\n      this.props.fetchLogin(loginValues);\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props.validInputs);\r\n    const { loggedIn, error } = this.props.login;\r\n    const { email, password, isEmpty } = this.props.validInputs;\r\n    const successAlert = loggedIn ? (\r\n      <SuccessAlert title={\"Sign in Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_signIn_body_form\">\r\n          <h2>SIGN IN </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <TextField\r\n            error={email.validError || isEmpty ? true : null}\r\n            name=\"email\"\r\n            helperText={email.validError ? email.textError : null}\r\n            id=\"standard-email-input\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.email}\r\n            onChange={this.onChanges}\r\n          />\r\n\r\n          <TextField\r\n            error={password.validError || isEmpty ? true : null}\r\n            name=\"password\"\r\n            id=\"standard-password-input\"\r\n            helperText={\r\n              password.validError || this.state.empty\r\n                ? password.textError\r\n                : null\r\n            }\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.password}\r\n            onChange={this.onChanges}\r\n          />\r\n\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <div className=\"links_to_forget_password\">\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"forgetPassword\")}\r\n              className=\"switchLink\"\r\n            >\r\n              Forget Password?\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <div className=\"links_to_signIn_password\">\r\n              <div className=\"links_to_signIn\">\r\n                <span>Don't Have Account?</span>\r\n                <span\r\n                  onClick={() => this.props.turnComponent(\"signUp\")}\r\n                  className=\"switchLink\"\r\n                >\r\n                  Register\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  login: state.Login,\r\n  validInputs: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  fetchLogin,\r\n  validation,\r\n  emptyInput,\r\n})(SignIn);\r\n","import axios from \"../../axios\";\r\nimport { LOGGIN_SUCCESSFULL, LOGGIN_FAILURE } from \"../Types/Types\";\r\n\r\nexport const fetchLogin = (user) => (dispatch) => {\r\n  axios\r\n    .post(\r\n      `/api/login`,\r\n      user,\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: LOGGIN_SUCCESSFULL,\r\n      });\r\n      localStorage.setItem(\"usertoken\", response.data.token);\r\n      return response.data.token;\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGGIN_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./SignUp.css\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport {\r\n  validation,\r\n  emptyInput,\r\n} from \"../../../../../Redux/Actions/FormValidationAction\";\r\nimport { register } from \"../../../../../Redux/Actions/registerAction\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    name: null,\r\n    email: null,\r\n    password: null,\r\n    repeatPassword: null,\r\n  };\r\n  onChanges = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.validation(e.target.type, e.target.value);\r\n  };\r\n  onEmpty = () => {\r\n    Object.values(this.state).map((item) => {\r\n     return this.props.emptyInput(item);\r\n    });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const RegisterValues = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      repeatPassword: this.state.repeatPassword,\r\n    };\r\n    if (\r\n      this.state.email === null &&\r\n      this.state.email === null &&\r\n      this.state.password === null\r\n    ) {\r\n      this.onEmpty();\r\n    }\r\n    const { email, password, text } = this.props.validInputs;\r\n    if (\r\n      email.valid &&\r\n      password.valid &&\r\n      text.valid &&\r\n      this.state.password.value === this.state.repeatPassword.value\r\n    ) {\r\n      this.props.register(RegisterValues);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, text, isEmpty } = this.props.validInputs;\r\n    const { registered, error } = this.props.reg;\r\n    const successAlert = registered ? (\r\n      <SuccessAlert title={\"Sign in Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_signUp_body_form\">\r\n          <h2>SIGN UP </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <TextField\r\n            error={text.validError || isEmpty ? true : null}\r\n            name=\"name\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.name}\r\n            onChange={this.onChanges}\r\n          />\r\n\r\n          <TextField\r\n            error={email.validError || isEmpty ? true : null}\r\n            name=\"email\"\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            size=\"small\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.email}\r\n            onChange={this.onChanges}\r\n          />\r\n          <TextField\r\n            error={password.validError || isEmpty ? true : null}\r\n            name=\"password\"\r\n            size=\"small\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.password}\r\n            onChange={this.onChanges}\r\n          />\r\n          <TextField\r\n            error={\r\n              this.state.password !== this.state.repeatPassword || isEmpty\r\n                ? true\r\n                : false\r\n            }\r\n            name=\"repeatPassword\"\r\n            size=\"small\"\r\n            id=\"repaeatPassword\"\r\n            label=\"Repeat Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.repeatPassword}\r\n            onChange={this.onChanges}\r\n          />\r\n\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <div className=\"link_to_signIn\">\r\n            <span>Already have account ? </span>\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signIn\")}\r\n              className=\"switchLink\"\r\n            >\r\n              SignIn\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reg: state.reg,\r\n  validInputs: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  register,\r\n  validation,\r\n  emptyInput,\r\n})(SignUp);\r\n","import axios from '../../axios'\r\nimport { REGISTER_SUCESSFULL, REGISTER_FAILURE } from \"../Types/Types\";\r\n\r\nexport const register = (newUser) => (dispatch) => {\r\n  \r\n  axios\r\n    .post(\r\n      `/api/register`,\r\n     newUser,\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCESSFULL,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: REGISTER_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./ForgetPassword.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetPassword } from \"../../../../../Redux/Actions/ForgetPasswordAction\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport {\r\n  validation,\r\n  emptyInput,\r\n} from \"../../../../../Redux/Actions/FormValidationAction\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\nclass ForgetPassword extends Component {\r\n  state = {\r\n    email: null,\r\n  };\r\n  onEmpty = () => {\r\n    Object.values(this.state).map((item) => {\r\n      return this.props.emptyInput(item);\r\n    });\r\n  };\r\n  onChanges = (e) => {\r\n    const InputName = e.target.name;\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.validation(InputName, e.target.value);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const resetValues = {\r\n      email: this.state.email,\r\n    };\r\n    if (this.state.email === null) {\r\n      this.onEmpty();\r\n    }\r\n    const { email } = this.props.validInputs;\r\n    if (email.valid) {\r\n      this.props.resetPassword(resetValues);\r\n    }\r\n  };\r\n  render() {\r\n    const { resetSuccess, error } = this.props.reset;\r\n    const { email, isEmpty } = this.props.validInputs;\r\n    const successAlert = resetSuccess ? (\r\n      <SuccessAlert title={\"Email Sent Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_Forget_Password_body_form\">\r\n          <h2>Forget Password </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <TextField\r\n            name=\"email\"\r\n            error={email.validError || isEmpty ? true : null}\r\n            id=\"standard-email-input\"\r\n            label=\"Email\"\r\n            type=\"text\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            defaultValue={this.state.email}\r\n            onChange={this.onChanges}\r\n          />\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Send Password Reset Link\r\n          </Button>\r\n          <div className=\"turnComponent\">\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signUp\")}\r\n              className=\"switchLink\"\r\n            >\r\n              Register\r\n            </span>\r\n            <span>|</span>\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signIn\")}\r\n              className=\"switchLink\"\r\n            >\r\n              SignIn\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  reset: state.reset,\r\n  validInputs: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  resetPassword,\r\n  validation,\r\n  emptyInput,\r\n})(ForgetPassword);\r\n","import axios from '../../axios'\r\nimport { Forget_Password_FETCH_SUCESSFULL, Forget_Password_FETCH_FAILURE } from \"../Types/Types\";\r\n\r\nexport const resetPassword = (email) => (dispatch) => {  \r\n  axios\r\n    .post(\r\n      `/api/password/reset`,\r\n     email\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: Forget_Password_FETCH_SUCESSFULL,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Forget_Password_FETCH_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./LoginForm.css\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport SignUp from \"./SignUp/SignUp\";\r\nimport ForgetPassword from \"./ForgetPassword/forgetPassword\";\r\nclass LoginForm extends Component {\r\n  state = {\r\n    component: \"signUp\",\r\n  };\r\n  onTurnComponents = (component) => {\r\n    switch (component) {\r\n      case component:\r\n        this.setState({\r\n          component: component,\r\n        });\r\n        break;\r\n      default:\r\n        return this.state.component;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"card_login_body\">\r\n        {this.state.component === \"signUp\" ? (\r\n          <SignUp turnComponent ={this.onTurnComponents} />\r\n        ) : this.state.component === \"signIn\" ? (\r\n          <SignIn turnComponent ={this.onTurnComponents} />\r\n        ) : this.state.component === \"forgetPassword\" ? (\r\n          <ForgetPassword turnComponent ={this.onTurnComponents} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport \"./LoginCart.css\";\r\nimport LoginPicture from \"./LoginCardPicture/LoginPicture\"\r\nimport LoginForm from './LoginForm/LoginForm'\r\nclass LoginCart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <LoginPicture />\r\n        <LoginForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginCart;\r\n","import React, { Component } from \"react\";\r\nimport \"./LoginContainer.css\";\r\nimport Spinner from \"../../UI/Spinner\";\r\nimport LoginCart from \"./LoginCart/LoginCart\";\r\nclass LoginContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Spinner />\r\n        <LoginCart />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import { LOGGIN_SUCCESSFULL, LOGGIN_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {  \r\n  switch (action.type) {\r\n    case LOGGIN_SUCCESSFULL:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        error: false,\r\n      };\r\n    case LOGGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"../Types/Types\";\r\n\r\nconst loader = (state = false, action) => {\r\n  switch (action.type) {\r\n      case SHOW_LOADER:\r\n          return action.data;\r\n      case HIDE_LOADER:\r\n          return action.data;\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport default loader;","import { REGISTER_SUCESSFULL, REGISTER_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  registered: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCESSFULL:\r\n      return {\r\n        ...state,\r\n        registered: true,\r\n        error: false,\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Forget_Password_FETCH_SUCESSFULL, Forget_Password_FETCH_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  resetSuccess: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Forget_Password_FETCH_SUCESSFULL:\r\n      return {\r\n        ...state,\r\n        resetSuccess: true,\r\n        error: false,\r\n      };\r\n    case Forget_Password_FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TEXT_VALIDATION,\r\n  EMAIL_VALIDATION,\r\n  PASSWORD_VALIDATION,\r\n  EMPTY_INPUT\r\n} from \"../Types/Types\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst inintialState = {\r\n  text: {},\r\n  email: {},\r\n  password: {},\r\n  isEmpty:null\r\n};\r\nconst validation = (state = inintialState, action) => {\r\n  switch (action.type) {\r\n    case EMPTY_INPUT:\r\n      if ( action.value === null || action.value === \"\") {\r\n        return {\r\n          ...state,\r\n          isEmpty:true\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          isEmpty:false\r\n        }\r\n      }\r\n    case TEXT_VALIDATION:\r\n      if (action.value === null || action.value.length < 3) {\r\n        return {\r\n          ...state,\r\n          text: {\r\n            isEmpty: false,\r\n            valid: false,\r\n            validError: true,\r\n            textError: \"minimum 3 characaters required\",\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          text: {\r\n            isEmpty: false,\r\n            valid: true,\r\n            validError: false,\r\n            textError: {},\r\n          },\r\n        };\r\n      }\r\n    case EMAIL_VALIDATION:\r\n      if (!emailRegex.test(action.value)) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            isEmpty: false,\r\n            valid: false,\r\n            validError: true,\r\n            textError:\"Invalid Email Address\"\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            isEmpty: false,\r\n            valid: true,\r\n            validError: false,\r\n            textError: {},\r\n          },\r\n        };\r\n      }\r\n    case PASSWORD_VALIDATION:\r\n      if (action.value.length < 6) {\r\n        return {\r\n          ...state,\r\n          password: {\r\n            isEmpty: false,\r\n            valid: false,\r\n            validError: true,\r\n            textError:\"Minimum 6 Characaters Required\",\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          password: {\r\n            isEmpty: false,\r\n            valid: true,\r\n            validError: false,\r\n            textError: {},\r\n          },\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default validation;\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducers from \"./loginReducers\"\r\nimport loadingReducer from './loadingReducer'\r\nimport registerReducer from './registerReducer'\r\nimport forgetPassword from './ForgetPasswordReducer'\r\nimport FormValidationRedcer from './FormValidationRedcer'\r\nexport default combineReducers({\r\n    Login: loginReducers,\r\n    loaded: loadingReducer,\r\n    reg: registerReducer,\r\n    reset: forgetPassword,\r\n    validation:FormValidationRedcer\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./Redux/Reducers/index\";\r\nconst middleware = [thunk];\r\nconst inintialState = {};\r\nconst store = createStore(\r\n  rootReducer,\r\n  inintialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport LoginContainer from \"./Login/Components/LoginContainer\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <LoginContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}