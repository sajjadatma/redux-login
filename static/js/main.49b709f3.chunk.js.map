{"version":3,"sources":["axios.js","UI/Spinner.js","Redux/Actions/loadingAction.js","Redux/Types/Types.js","Login/Components/LoginCart/LoginCardPicture/LoginPicture.js","UI/successAlert.js","UI/errorAlert.js","UI/input.js","Redux/Actions/FormValidationAction.js","Login/Components/LoginCart/LoginForm/SignIn/SignIn.js","Redux/Actions/loginAction.js","Login/Components/LoginCart/LoginForm/SignUp/SignUp.js","Redux/Actions/registerAction.js","Login/Components/LoginCart/LoginForm/ForgetPassword/forgetPassword.js","Redux/Actions/ForgetPasswordAction.js","Login/Components/LoginCart/LoginForm/LoginForm.js","Login/Components/LoginCart/LoginCart.js","Login/Components/LoginContainer.js","Redux/Reducers/loginReducers.js","Redux/Reducers/loadingReducer.js","Redux/Reducers/registerReducer.js","Redux/Reducers/ForgetPasswordReducer.js","Redux/Reducers/FormValidationRedcer.js","Redux/Reducers/index.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","timeout","params","defaults","headers","Spinner","self","this","interceptors","request","use","config","props","loading","error","Promise","reject","response","Backdrop","open","loader","loaded","style","zIndex","color","margin","CircularProgress","width","height","Component","connect","state","bool","dispatch","type","data","LoginPicture","className","successAlert","Fade","in","Alert","variant","severity","title","errorAlert","inputText","inputValue","value","nextProps","nextState","setState","name","max","min","checkRequired","checkEmailValidation","checkLength","element","object","validation","key","hasOwnProperty","TextField","size","label","charAt","toUpperCase","slice","onChange","event","undefined","validError","helperText","textError","inputName","input","SignIn","email","password","onChanges","e","target","onSubmit","preventDefault","SignInValues","valid","fetchLogin","login","loggedIn","Button","onClick","turnComponent","Login","user","post","then","localStorage","setItem","token","catch","SignUp","RegisterValues","register","reg","registered","newUser","ForgetPassword","resetValues","resetPassword","reset","resetSuccess","LoginForm","component","onTurnComponents","LoginCart","LoginContainer","initialState","action","emailRegex","trim","length","test","combineReducers","loadingReducer","FormValidationRedcer","form","formReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.49b709f3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"http://127.0.0.1:8000\",\r\n  timeout: 10000,\r\n  params: {}, // do not remove this, its added to add params later in the config\r\n});\r\naxios.defaults.headers = { \"Content-Type\": \"application/json\" }\r\nexport default instance;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { loading } from \"../Redux/Actions/loadingAction\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nclass Spinner extends Component {\r\n  componentWillMount() {\r\n    const self = this;\r\n    axios.interceptors.request.use(\r\n      function (config) {\r\n        // spinning start to show\r\n        self.props.loading(true);\r\n        return config;\r\n      },\r\n      function (error) {\r\n        self.props.loading(false);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      function (response) {\r\n        // spinning hide\r\n        self.props.loading(false);\r\n        return response;\r\n      },\r\n      function (error) {\r\n        self.props.loading(false);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Backdrop\r\n          open={this.props.loader.loaded}\r\n          style={{ zIndex: 100, color: \"#fff\", margin: 0 }}\r\n        >\r\n          <CircularProgress\r\n            style={{ width: 60, height: \"unset\" }}\r\n            color=\"inherit\"\r\n          />\r\n        </Backdrop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loader: state,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loading })(Spinner);\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"../Types/Types\";\r\nexport const loading = (bool) => (dispatch) => {\r\n  if (bool) {\r\n    dispatch({\r\n      type: SHOW_LOADER,\r\n      data: bool,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: HIDE_LOADER,\r\n      data: bool,\r\n    });\r\n  }\r\n};\r\n","//Auth\r\n\r\n//Register\r\nexport const REGISTER_SUCESSFULL = 'REGISTER_SUCESSFULL'\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE'\r\n\r\n\r\n//Login\r\nexport const LOGGIN_SUCCESSFULL = 'LOGGIN_SUCCESSFULL'\r\nexport const LOGGIN_FAILURE = 'LOGGIN_FAILURE'\r\n\r\n// Loader\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const HIDE_LOADER = 'HIDE_LOADER'\r\n\r\n// Forget Password\r\nexport const Forget_Password_FETCH_SUCESSFULL = 'Forget_Password_FETCH_SUCESSFULL'\r\nexport const Forget_Password_FETCH_FAILURE = 'Forget_Password_FETCH_FAILURE'\r\n\r\n// Validation\r\n\r\nexport const CHECK_REQUIRED = 'CHECK_REQUIRED'\r\nexport const CHECK_LENGTH = 'CHECK_LENGTH'\r\nexport const CHECK_EMAIL_VALIDATION = 'CHECK_EMAIL_VALIDATION'","import React from 'react';\r\nimport './LoginPicture.css'\r\nconst LoginPicture = () => {\r\n    return (\r\n        <div className=\"card_picture\">\r\n        <div className=\"card_picture__title\">\r\n          <h1>\r\n            Atma <span>Shop</span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginPicture;\r\n","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst successAlert = (props) => {\r\n  return (\r\n    <Fade in timeout={500}>\r\n      <Alert variant=\"filled\" severity=\"success\">\r\n        {props.title}\r\n      </Alert>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default successAlert;\r\n","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst errorAlert = (props) => {\r\n  return (\r\n    <Fade in timeout={500}>\r\n      <Alert variant=\"filled\" severity=\"error\">\r\n        {props.title}\r\n      </Alert>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default errorAlert;\r\n","import React, { Component } from \"react\";\r\nimport \"./input.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  checkRequired,\r\n  checkLength,\r\n  checkEmailValidation,\r\n} from \"../Redux/Actions/FormValidationAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass inputText extends Component {\r\n  state = {\r\n    inputValue: this.props.value,\r\n  };\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    if (this.props.value !== nextProps.value) {\r\n      this.setState({ inputValue: nextProps.value }, () => {\r\n        const { value, name, type, max, min } = this.props;\r\n        if (this.props.value === \"\") {\r\n          this.props.checkRequired(name, value);\r\n        } else if (type === \"email\") {\r\n          this.props.checkEmailValidation(name, value);\r\n        }\r\n        // else if (this.props.value !== this.props.MainPassword) {\r\n\r\n        // }\r\n        else {\r\n          this.props.checkLength(name, value, min, max);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let element;\r\n    const object = this.props.validation[this.props.name];\r\n    for (const key in object) {\r\n      if (object.hasOwnProperty(key)) {\r\n        element = object;\r\n      }\r\n    }\r\n    return (\r\n      <TextField\r\n        size=\"small\"\r\n        type={this.props.type}\r\n        name={this.props.name}\r\n        label={\r\n          this.props.name.charAt(0).toUpperCase() + this.props.name.slice(1)\r\n        }\r\n        variant=\"outlined\"\r\n        onChange={this.props.event}\r\n        error={\r\n          (element !== undefined && element.validError === true) ||\r\n          this.props.value === \"\"\r\n            ? true\r\n            : null\r\n        }\r\n        helperText={\r\n          element !== undefined && element.validError === true\r\n            ? element.textError\r\n            : null\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  validation: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  checkRequired,\r\n  checkLength,\r\n  checkEmailValidation,\r\n})(inputText);\r\n","import { CHECK_LENGTH, CHECK_REQUIRED,CHECK_EMAIL_VALIDATION } from \"../Types/Types\";\r\n\r\nexport const checkRequired = (inputName, inputValue) => dispatch => {\r\n  \r\n  dispatch({\r\n    type: CHECK_REQUIRED,\r\n    input: inputName,\r\n    value: inputValue,\r\n  });\r\n};\r\nexport const checkLength = (inputName, inputValue, min, max) => dispatch => {\r\n  dispatch({\r\n    type: CHECK_LENGTH,\r\n    input: inputName,\r\n    value: inputValue,\r\n    min: min,\r\n    max: max,\r\n  });\r\n};\r\n\r\nexport const checkEmailValidation = (inputName, inputValue) => dispatch => {\r\n  \r\n  dispatch({\r\n    type: CHECK_EMAIL_VALIDATION,\r\n    input: inputName,\r\n    value: inputValue,\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport \"./SignIn.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchLogin } from \"../../../../../Redux/Actions/loginAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\nimport InputText from \"../../../../../UI/input\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: null,\r\n    password: null,\r\n  };\r\n  onChanges = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const SignInValues = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const { email, password } = this.props.validation;\r\n\r\n    if (this.state.email === null && this.state.password === null) {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n    if (\r\n      email !== undefined &&\r\n      email.valid === true &&\r\n      password !== undefined &&\r\n      password.valid === true\r\n    ) {\r\n      this.props.fetchLogin(SignInValues);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loggedIn, error } = this.props.login;\r\n    const successAlert = loggedIn ? (\r\n      <SuccessAlert title={\"Sign in Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_signIn_body_form\">\r\n          <h2>SIGN IN </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <InputText\r\n            event={this.onChanges}\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            type=\"email\"\r\n            min={3}\r\n            max={100}\r\n          />\r\n          <InputText\r\n            event={this.onChanges}\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            type=\"password\"\r\n            min={8}\r\n            max={100}\r\n          />\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <div className=\"links_to_forget_password\">\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"forgetPassword\")}\r\n              className=\"switchLink\"\r\n            >\r\n              Forget Password?\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <div className=\"links_to_signIn_password\">\r\n              <div className=\"links_to_signIn\">\r\n                <span>Don't Have Account?</span>\r\n                <span\r\n                  onClick={() => this.props.turnComponent(\"signUp\")}\r\n                  className=\"switchLink\"\r\n                >\r\n                  Register\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  login: state.Login,\r\n  validation: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  fetchLogin,\r\n})(SignIn);\r\n","import axios from \"../../axios\";\r\nimport { LOGGIN_SUCCESSFULL, LOGGIN_FAILURE } from \"../Types/Types\";\r\n\r\nexport const fetchLogin = (user) => (dispatch) => {\r\n  axios\r\n    .post(\r\n      `/api/login`,\r\n      user,\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: LOGGIN_SUCCESSFULL,\r\n      });\r\n      localStorage.setItem(\"usertoken\", response.data.token);\r\n      return response.data.token;\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGGIN_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./SignUp.css\";\r\nimport { connect } from \"react-redux\";\r\nimport InputText from \"../../../../../UI/input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { register } from \"../../../../../Redux/Actions/registerAction\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    name: null,\r\n    email: null,\r\n    password: null,\r\n  };\r\n  onChanges = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const RegisterValues = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    if (\r\n      this.state.email === null &&\r\n      this.state.password === null &&\r\n      this.state.password ===null\r\n    ) {\r\n      this.setState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n    const { email, password, name } = this.props.validation;\r\n    if (\r\n      email !== undefined &&\r\n      email.valid === true &&\r\n      password !== undefined &&\r\n      password.valid === true &&\r\n      name !== undefined &&\r\n      name.valid === true\r\n    ) {\r\n      this.props.register(RegisterValues);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { registered, error } = this.props.reg;\r\n    const successAlert = registered ? (\r\n      <SuccessAlert title={\"Sign in Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_signUp_body_form\">\r\n          <h2>SIGN UP </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <InputText\r\n            event={this.onChanges}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            type=\"name\"\r\n            min={3}\r\n            max={30}\r\n          />\r\n\r\n          <InputText\r\n            event={this.onChanges}\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            type=\"email\"\r\n            min={3}\r\n            max={100}\r\n          />\r\n             <InputText\r\n            event={this.onChanges}\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            type=\"password\"\r\n            min={6}\r\n            max={25}\r\n          />\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <div className=\"link_to_signIn\">\r\n            <span>Already have account ? </span>\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signIn\")}\r\n              className=\"switchLink\"\r\n            >\r\n              SignIn\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reg: state.reg,\r\n  validation: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  register,\r\n})(SignUp);\r\n","import axios from '../../axios'\r\nimport { REGISTER_SUCESSFULL, REGISTER_FAILURE } from \"../Types/Types\";\r\n\r\nexport const register = (newUser) => (dispatch) => {\r\n  \r\n  axios\r\n    .post(\r\n      `/api/register`,\r\n     newUser,\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCESSFULL,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: REGISTER_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./ForgetPassword.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetPassword } from \"../../../../../Redux/Actions/ForgetPasswordAction\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SuccessAlert from \"../../../../../UI/successAlert\";\r\nimport ErrorAlert from \"../../../../../UI/errorAlert\";\r\nimport InputText from \"../../../../../UI/input\";\r\n\r\nclass ForgetPassword extends Component {\r\n  state = {\r\n    email: null,\r\n  };\r\n\r\n  onChanges = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const resetValues = {\r\n      email: this.state.email,\r\n    };\r\n    if (this.state.email === null) {\r\n      this.setState({\r\n        email: \"\",\r\n      });\r\n    }\r\n    const { email } = this.props.validation;\r\n    if (email !== undefined && email.valid === true) {\r\n      this.props.resetPassword(resetValues);\r\n    }\r\n  };\r\n  render() {\r\n    const { resetSuccess, error } = this.props.reset;\r\n    const successAlert = resetSuccess ? (\r\n      <SuccessAlert title={\"Email Sent Successfully.\"} />\r\n    ) : null;\r\n    const errorAlert = error ? (\r\n      <ErrorAlert title={\"Something Happend! Please Check Your Information.\"} />\r\n    ) : null;\r\n\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div className=\"card_Forget_Password_body_form\">\r\n          <h2>Forget Password </h2>\r\n          <hr />\r\n          {successAlert}\r\n          {errorAlert}\r\n          <InputText\r\n            event={this.onChanges}\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            type=\"email\"\r\n            min={3}\r\n            max={100}\r\n          />\r\n          <Button\r\n            onClick={this.onSubmit}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Send Password Reset Link\r\n          </Button>\r\n          <div className=\"turnComponent\">\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signUp\")}\r\n              className=\"switchLink\"\r\n            >\r\n              Register\r\n            </span>\r\n            <span>|</span>\r\n            <span\r\n              onClick={() => this.props.turnComponent(\"signIn\")}\r\n              className=\"switchLink\"\r\n            >\r\n              SignIn\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  reset: state.reset,\r\n  validation: state.validation,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  resetPassword,\r\n})(ForgetPassword);\r\n","import axios from '../../axios'\r\nimport { Forget_Password_FETCH_SUCESSFULL, Forget_Password_FETCH_FAILURE } from \"../Types/Types\";\r\n\r\nexport const resetPassword = (email) => (dispatch) => {  \r\n  axios\r\n    .post(\r\n      `/api/password/reset`,\r\n     email\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: Forget_Password_FETCH_SUCESSFULL,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Forget_Password_FETCH_FAILURE,\r\n      });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./LoginForm.css\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport SignUp from \"./SignUp/SignUp\";\r\nimport ForgetPassword from \"./ForgetPassword/forgetPassword\";\r\nclass LoginForm extends Component {\r\n  state = {\r\n    component: \"signUp\",\r\n  };\r\n  onTurnComponents = (component) => {\r\n    switch (component) {\r\n      case component:\r\n        this.setState({\r\n          component: component,\r\n        });\r\n        break;\r\n      default:\r\n        return this.state.component;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"card_login_body\">\r\n        {this.state.component === \"signUp\" ? (\r\n          <SignUp turnComponent ={this.onTurnComponents} />\r\n        ) : this.state.component === \"signIn\" ? (\r\n          <SignIn turnComponent ={this.onTurnComponents} />\r\n        ) : this.state.component === \"forgetPassword\" ? (\r\n          <ForgetPassword turnComponent ={this.onTurnComponents} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\nimport \"./LoginCart.css\";\r\nimport LoginPicture from \"./LoginCardPicture/LoginPicture\"\r\nimport LoginForm from './LoginForm/LoginForm'\r\nclass LoginCart extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <LoginPicture />\r\n        <LoginForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginCart;\r\n","import React, { Component } from \"react\";\r\nimport \"./LoginContainer.css\";\r\nimport Spinner from \"../../UI/Spinner\";\r\nimport LoginCart from \"./LoginCart/LoginCart\";\r\nclass LoginContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Spinner />\r\n        <LoginCart />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import { LOGGIN_SUCCESSFULL, LOGGIN_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {  \r\n  switch (action.type) {\r\n    case LOGGIN_SUCCESSFULL:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        error: false,\r\n      };\r\n    case LOGGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"../Types/Types\";\r\n\r\nconst loader = (state = false, action) => {\r\n  switch (action.type) {\r\n      case SHOW_LOADER:\r\n          return action.data;\r\n      case HIDE_LOADER:\r\n          return action.data;\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport default loader;","import { REGISTER_SUCESSFULL, REGISTER_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  registered: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCESSFULL:\r\n      return {\r\n        ...state,\r\n        registered: true,\r\n        error: false,\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Forget_Password_FETCH_SUCESSFULL, Forget_Password_FETCH_FAILURE } from \"../Types/Types\";\r\n\r\nconst initialState = {\r\n  resetSuccess: false,\r\n  error: false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Forget_Password_FETCH_SUCESSFULL:\r\n      return {\r\n        ...state,\r\n        resetSuccess: true,\r\n        error: false,\r\n      };\r\n    case Forget_Password_FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CHECK_REQUIRED, CHECK_LENGTH,CHECK_EMAIL_VALIDATION } from \"../Types/Types\";\r\n\r\nvar emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst validation = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CHECK_REQUIRED:\r\n      if (action.value.trim() !== \"\" && action.value !== null) {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            input: action.input,\r\n            valid: true,\r\n            validError: false,\r\n          },\r\n        };\r\n      } else if(action.value === \"\") {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            input: action.input,\r\n            valid: false,\r\n            validError: true,\r\n            textError: `${action.input.charAt(0).toUpperCase() + action.input.slice(1)} is Required`,\r\n          },\r\n        };\r\n      }\r\n    case CHECK_LENGTH:\r\n      if (action.value.trim().length < action.min) {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            valid: false,\r\n            validError: true,\r\n            textError: `${action.input.charAt(0).toUpperCase() + action.input.slice(1)} must be at least ${action.min} characters`,\r\n          },\r\n        };\r\n      } else if (action.value.trim().length >= action.max) {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            valid: false,\r\n            validError: true,\r\n            textError: `${action.input} must be ${action.max} characters`,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            valid: true,\r\n            validError: false,\r\n            textError: {},\r\n          },\r\n        };\r\n      }\r\n    case CHECK_EMAIL_VALIDATION:\r\n      if (!emailRegex.test(action.value.trim())) {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            valid: false,\r\n            validError: true,\r\n            textError: `Email Not Valid!`,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.input]: {\r\n            valid: true,\r\n            validError: false,\r\n            textError: {},\r\n          },\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default validation;","import { combineReducers } from \"redux\";\r\nimport loginReducers from \"./loginReducers\"\r\nimport loadingReducer from './loadingReducer'\r\nimport registerReducer from './registerReducer'\r\nimport forgetPassword from './ForgetPasswordReducer'\r\nimport FormValidationRedcer from './FormValidationRedcer'\r\nimport { reducer as formReducer } from 'redux-form'\r\nexport default combineReducers({\r\n    Login: loginReducers,\r\n    loaded: loadingReducer,\r\n    reg: registerReducer,\r\n    reset: forgetPassword,\r\n    validation: FormValidationRedcer,\r\n    form: formReducer\r\n\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./Redux/Reducers/index\";\r\nconst middleware = [thunk];\r\nconst inintialState = {};\r\nconst store = createStore(\r\n  rootReducer,\r\n  inintialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport LoginContainer from \"./Login/Components/LoginContainer\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <LoginContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}